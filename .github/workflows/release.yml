name: Build and Release APK

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Decode Keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo "$KEYSTORE_BASE64" | base64 -d > app/keystore.jks
        
    - name: Verify Keystore
      run: |
        ls -la app/keystore.jks
        echo "Keystore aliases:"
        keytool -list -keystore app/keystore.jks -storepass "$SIGNING_STORE_PASSWORD"
        
    - name: Debug Environment Variables
      run: |
        echo "SIGNING_KEY_ALIAS is set: $([ -n "$SIGNING_KEY_ALIAS" ] && echo 'YES' || echo 'NO')"
        echo "SIGNING_KEY_PASSWORD is set: $([ -n "$SIGNING_KEY_PASSWORD" ] && echo 'YES' || echo 'NO')"
        echo "SIGNING_STORE_PASSWORD is set: $([ -n "$SIGNING_STORE_PASSWORD" ] && echo 'YES' || echo 'NO')"
        
    - name: Build Debug APK
      run: ./gradlew assembleDebug
        
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Upload Release APK to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/*.apk
        
    - name: Upload Debug APK to Artifacts  
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/debug/app-debug.apk
          app/build/outputs/apk/release/*.apk
        name: SecureVault Android ${{ github.ref_name }}
        body: |
          ## SecureVault Android Release ${{ github.ref_name }}
          
          ### ðŸ”’ Password Manager Features
          - Secure password storage with AES encryption
          - Biometric authentication (fingerprint/face unlock)
          - Backup & restore with encrypted files
          - Material 3 design with dark/light themes
          - Offline-first with no internet permissions
          
          ### ðŸ“± Installation
          1. Download the APK file below
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install the APK file
          4. Grant biometric permissions when prompted
          
          ### ðŸ“‹ Requirements
          - Android 7.0 (API 24) or higher
          - Biometric hardware (fingerprint/face) recommended
          
          ### ðŸ“¦ Downloads
          - **app-release.apk** - Production version (recommended)
          - **app-debug.apk** - Debug version for testing
          
          ---
          Built with Clean Architecture, Jetpack Compose, and Room Database
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}